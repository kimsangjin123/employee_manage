<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employee">
    
    <resultMap type="com.spring.board.vo.EmployeeVo" id="EmployeeVo">
    <result property="employeeId" column="EMPLOYEE_ID"/>
    <result property="employeeName" column="EMPLOYEE_NAME"/>
    <result property="ssNumber1" column="SS_NUMBER1"/>
    <result property="ssNumber2" column="SS_NUMBER2"/>
    <result property="department" column="DEPARTMENT"/>
    <result property="employeeJob" column="EMPLOYEE_JOB"/>
    <result property="startDate" column="START_DATE"/>
    <result property="regiDate" column="REGI_DATE"/>
    <result property="sal" column="SAL"/>
    <result property="workType" column="WORK_TYPE"/>

    <result property="employeeAddr1" column="EMPLOYEE_ADDR1"/>
    <result property="employeeAddr2" column="EMPLOYEE_ADDR2"/>
    <result property="employeeAddr3" column="EMPLOYEE_ADDR3"/>
    <result property="employeeAddr4" column="EMPLOYEE_ADDR4"/>
    <result property="employeeAddr5" column="EMPLOYEE_ADDR5"/>
    
    <result property="endDate" column="END_DATE"/>
    <result property="totalWorkDays" column="TOTAL_WORK_DAYS"/>
    <result property="workDays" column="WORK_DAYS"/>
    <result property="workYears" column="WORK_YEARS"/>
    <result property="workMonths" column="WORK_MONTHS"/>

   	<result property="employeeAddrToString" column="EMPLOYEE_ADDR_TO_STRING"/>
   	<result property="todayDateToString" column="TODAY_DATE_TO_STRING"/>
   	<result property="workDaysToString" column="WORK_DAYS_TO_STRING"/>

    
	<collection property="employeeCodeVo" resultMap="EmployeeCodeVo"/>

    </resultMap>
	
	<resultMap type="com.spring.board.vo.EmployeeCodeVo" id="EmployeeCodeVo">
	
	<result property="codeType" column="CODE_TYPE"/>
	<result property="codeName" column="CODE_NAME"/>
	<result property="codeId" column="CODE_ID"/>
	
	</resultMap>

<insert id="insert" parameterType="com.spring.board.vo.EmployeeVo">
  /*employee.insert*/ 
        INSERT INTO 
        	EMPLOYEE
	    (
	    	EMPLOYEE_ID
	        ,EMPLOYEE_NAME
	        ,SS_NUMBER1
	        ,SS_NUMBER2
	        ,DEPARTMENT
	        ,EMPLOYEE_JOB
	        ,START_DATE
	        ,REGI_DATE
	        ,SAL
	        ,WORK_TYPE
	        ,EMPLOYEE_ADDR1
	        ,EMPLOYEE_ADDR2
	        ,EMPLOYEE_ADDR3
	        ,EMPLOYEE_ADDR4
	        ,EMPLOYEE_ADDR5
        )
        VALUES
        (
	        (SELECT TO_NUMBER(NVL(MAX(EMPLOYEE_ID),1)) FROM EMPLOYEE)+1
	        ,#{employeeName}
	        ,#{ssNumber1}
	        ,#{ssNumber2}
	        ,#{department}
	        ,#{employeeJob}
	        ,TO_DATE(#{startDate},'YY-MM-DD')
	        ,NULL
	        ,NULL
	        ,#{workType}
	        ,NVL(#{employeeAddr1},NULL)
	        ,NVL(#{employeeAddr2},NULL)
	        ,NVL(#{employeeAddr3},NULL)
	        ,NVL(#{employeeAddr4},NULL)
	        ,NVL(#{employeeAddr5},NULL)
        )

</insert>  
<select id="employeeList" parameterType="com.spring.board.vo.EmployeePageVo" resultMap="EmployeeVo">
	/* employee.employeeList */ 
	SELECT
		A.EMPLOYEE_ID
		,A.EMPLOYEE_NAME
		,B.CODE_NAME AS DEPARTMENT
		,C.CODE_NAME AS EMPLOYEE_JOB
	FROM
		(
		SELECT
			EMPLOYEE_ID
			,EMPLOYEE_NAME
			,EMPLOYEE_JOB
			,DEPARTMENT
			,ROW_NUMBER() OVER(ORDER BY EMPLOYEE_ID DESC) AS NUMROW
		FROM
			EMPLOYEE
		) A
		,(
			SELECT
				CODE_ID
				,CODE_NAME
			FROM
				EMPLOYEE_CODE
			WHERE
				CODE_TYPE='department'
						
		) B
		,(
			SELECT
				CODE_ID
				,CODE_NAME
			FROM
				EMPLOYEE_CODE
			WHERE
				CODE_TYPE='job'	
		) C
		
			
	WHERE
		A.DEPARTMENT=B.CODE_ID
	AND
		A.EMPLOYEE_JOB=C.CODE_ID
	AND
		A.NUMROW BETWEEN (#{pageNo}-1)*10+1 AND (#{pageNo})*10


</select>
<select id="selectEmployeeCnt" resultType="Integer">
	/* employee.selectEmployeeCnt */
	SELECT
		COUNT(*)
	FROM
		EMPLOYEE
</select>

<select id="employeeSelectOne" parameterType="com.spring.board.vo.EmployeeVo" resultMap="EmployeeVo">
	/*employee.employeeSelectOne*/

	SELECT
		 A.EMPLOYEE_ID
		 ,A.EMPLOYEE_NAME
		 ,B.CODE_NAME AS DEPARTMENT
		 ,C.CODE_NAME AS EMPLOYEE_JOB
		 ,D.CODE_NAME AS WORK_TYPE
         ,A.START_DATE
         ,A.REGI_DATE
		 ,A.SS_NUMBER1
		 ,A.SS_NUMBER2
		 ,A.EMPLOYEE_ADDR1
		 ,A.EMPLOYEE_ADDR2
		 ,A.EMPLOYEE_ADDR3
		 ,A.EMPLOYEE_ADDR4
		 ,A.EMPLOYEE_ADDR5
		 ,A.TOTAL_WORK_DAYS
		 ,A.WORK_YEARS
		 ,A.WORK_MONTHS
		 ,A.WORK_DAYS
		 ,A.END_DATE
		 ,A.EMPLOYEE_ADDR_TO_STRING
		 ,A.TODAY_DATE_TO_STRING
         ,(CASE
    	 	WHEN A.WORK_YEARS != 0
    	 		THEN TO_CHAR(A.WORK_YEARS)||'년'
    	 	WHEN A.WORK_MONTHS != 0
    	 		THEN TO_CHAR(A.WORK_MONTHS)||'개월'
            WHEN A.WORK_MONTHS = 0
                THEN TO_CHAR(A.WORK_DAYS) ||'일'
            END) AS WORK_DAYS_TO_STRING
	FROM
		(
		SELECT
			  EMPLOYEE_ID
			 ,EMPLOYEE_NAME
			 ,DEPARTMENT AS DPT
			 ,EMPLOYEE_JOB AS E_JOB
             ,WORK_TYPE AS W_TYPE
			 ,SS_NUMBER1
			 ,SS_NUMBER2
             ,TO_CHAR(START_DATE,'YYYY-MM-DD') AS START_DATE
             ,TO_CHAR(REGI_DATE,'YYYY-MM-DD') AS REGI_DATE
			 ,EMPLOYEE_ADDR1
			 ,EMPLOYEE_ADDR2
			 ,EMPLOYEE_ADDR3
			 ,EMPLOYEE_ADDR4
			 ,EMPLOYEE_ADDR5
			 
			 ,CEIL(NVL(REGI_DATE,SYSDATE)-START_DATE) AS TOTAL_WORK_DAYS
			 ,TRUNC(MONTHS_BETWEEN(NVL(REGI_DATE,SYSDATE),START_DATE)/12) AS WORK_YEARS
			 ,TRUNC((MOD(MONTHS_BETWEEN(NVL(REGI_DATE,SYSDATE),START_DATE),12))) AS WORK_MONTHS
			 ,CEIL(MOD(MOD(MONTHS_BETWEEN(NVL(REGI_DATE,SYSDATE),START_DATE),12),1)*(365/12)) AS WORK_DAYS
			 ,NVL(TO_CHAR(REGI_DATE,'YYYY-MM-DD'),'재직중') AS END_DATE
			 ,NVL(EMPLOYEE_ADDR2,EMPLOYEE_ADDR3) ||','|| EMPLOYEE_ADDR4 AS EMPLOYEE_ADDR_TO_STRING
			 
			 ,TO_CHAR(EXTRACT(YEAR FROM SYSDATE))||'년'||
	    		TO_CHAR(EXTRACT(MONTH FROM SYSDATE))||'월'||
	    			TO_CHAR(EXTRACT(DAY FROM SYSDATE))||'일'	AS TODAY_DATE_TO_STRING
	    	
		FROM
			EMPLOYEE
        WHERE
            EMPLOYEE_ID= #{employeeId}
		
		) A
		,(
			SELECT
				CODE_ID
				,CODE_NAME
			FROM
				EMPLOYEE_CODE
			WHERE
				CODE_TYPE='department'
		) B
		,(
			SELECT
				CODE_ID
				,CODE_NAME
			FROM
				EMPLOYEE_CODE
			WHERE
				CODE_TYPE='job'
		) C
		,(
			SELECT
				CODE_ID
				,CODE_NAME
			FROM
				EMPLOYEE_CODE
			WHERE
				CODE_TYPE='worktype'
		) D

		
	WHERE
		A.DPT=B.CODE_ID
	AND
		A.E_JOB=C.CODE_ID
	AND
		A.W_TYPE=D.CODE_ID

	
</select>

<update id="employeeUpdate" parameterType="com.spring.board.vo.EmployeeVo">
	/* employee.employeeUpdate */
	UPDATE
		EMPLOYEE
	SET
		EMPLOYEE_NAME=#{employeeName}
		,DEPARTMENT=#{department}
		,SS_NUMBER1=#{ssNumber1}
		,SS_NUMBER2=#{ssNumber2}
		,EMPLOYEE_JOB=#{employeeJob}
		,START_DATE=#{startDate}
		,REGI_DATE=NVL(#{regiDate},NULL)
		,WORK_TYPE=#{workType}
		,EMPLOYEE_ADDR1=NVL(#{employeeAddr1},NULL)
		,EMPLOYEE_ADDR2=NVL(#{employeeAddr2},NULL)
		,EMPLOYEE_ADDR3=NVL(#{employeeAddr3},NULL)
		,EMPLOYEE_ADDR4=NVL(#{employeeAddr4},NULL)
		,EMPLOYEE_ADDR5=NVL(#{employeeAddr5},NULL)
	WHERE
		EMPLOYEE_ID=#{employeeId}

</update>

<delete id="employeeDelete" parameterType="com.spring.board.vo.EmployeeVo">
	/* employee.employeeDelete */
	DELETE
	FROM
		EMPLOYEE
	WHERE
		EMPLOYEE_ID=#{employeeId}

</delete>

<select id="employeeSelectCode" resultMap="EmployeeCodeVo">
	/*employee.employeeSelectCode*/
	SELECT
		CODE_TYPE
		,CODE_ID
		,CODE_NAME
	FROM
		EMPLOYEE_CODE
	ORDER BY
		CODE_ID

</select>


</mapper>
